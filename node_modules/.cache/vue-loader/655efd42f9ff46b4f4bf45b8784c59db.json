{"remainingRequest":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/petrkopev/Desktop/work/test-pitch-vue/src/views/Favourites.vue?vue&type=style&index=0&id=a3d1bcb8&lang=scss&","dependencies":[{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/src/views/Favourites.vue","mtime":1665729081545},{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/petrkopev/Desktop/work/test-pitch-vue/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mYXZvdXJpdGVzIHsKICBtYXJnaW4tdG9wOiAyMHB4OwoKICAmLXRpdGxlIHsKICAgIG1hcmdpbi1ib3R0b206IDI1cHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQoKICAmLWxpc3QgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgbWFyZ2luLWJvdHRvbTogN3B4OwogICAgcGFkZGluZzogNXB4IDIwcHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCBzYW5keWJyb3duOwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKCiAgICAmIC5lbC1idXR0b24gewogICAgICBmb250LXNpemU6IDMwcHg7CiAgICAgIHBhZGRpbmc6IDFweDsKICAgICAgYm9yZGVyLXJhZGl1czogMjZweDsKICAgIH0KICB9CgogICYtcGFnaW5hdGlvbiB7CiAgICBtYXJnaW46IDMwcHggMCA3MHB4OwogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIH0KfQo="},{"version":3,"sources":["Favourites.vue"],"names":[],"mappings":";AA0GA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Favourites.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <Navbar/>\n\n    <div\n        v-loading=\"isLoading\"\n        class=\"favourites container\"\n    >\n      <h1 class=\"favourites-title\">Избранное</h1>\n      <div\n          v-for=\"favourite in favourites\"\n          :key=\"favourite.id\"\n          class=\"favourites-list\"\n      >\n        <span class=\"favourites-item\">{{ favourite.product.title }}</span>\n        <el-popconfirm\n            title=\"Вы уверены, что хотите удалить?\"\n            @confirm=\"onDeleteFavourite(favourite.product.id)\"\n        >\n          <el-button\n              slot=\"reference\"\n              type=\"outline-primary\"\n              icon=\"el-icon-star-on\"\n          >\n          </el-button>\n        </el-popconfirm>\n      </div>\n\n      <div class=\"favourites-pagination\">\n        <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :current-page.sync=\"currentPage\"\n            :total=\"total\"\n            :page-size=\"favouritesPerPage\"\n            @current-change=\"onPageChange\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"@/components/Navbar\";\nimport {mapActions, mapState} from 'vuex';\n\n\nexport default {\n  name: 'Favourites',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      isLoading: false,\n      currentPage: 1,\n      favouritesPerPage: 50,\n    }\n  },\n  computed: {\n    ...mapState('favourites', ['total', 'favourites']),\n  },\n  methods: {\n    ...mapActions('favourites', ['fetchFavourites', 'fetchFavouritesCount', 'deleteFavourite']),\n    async getFavourites(offset) {\n      try {\n        this.isLoading = true;\n\n        await this.fetchFavourites({offset});\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    onPageChange(page) {\n      let offsetView\n      if (page === 1) {\n        offsetView = 0\n      } else {\n        offsetView = this.favouritesPerPage * (page - 1) + 1\n      }\n\n      this.getFavourites(offsetView);\n    },\n\n    async onDeleteFavourite(id) {\n      try {\n        this.isLoading = true;\n        await this.deleteFavourite({id});\n        await this.getFavourites()\n        await this.fetchFavouritesCount()\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n  },\n  created() {\n    this.getFavourites()\n    this.fetchFavouritesCount()\n\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.favourites {\n  margin-top: 20px;\n\n  &-title {\n    margin-bottom: 25px;\n    text-align: center;\n  }\n\n  &-list {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 7px;\n    padding: 5px 20px;\n    border: 1px solid sandybrown;\n    border-radius: 10px;\n\n    & .el-button {\n      font-size: 30px;\n      padding: 1px;\n      border-radius: 26px;\n    }\n  }\n\n  &-pagination {\n    margin: 30px 0 70px;\n    display: flex;\n    justify-content: center;\n  }\n}\n</style>\n"]}]}